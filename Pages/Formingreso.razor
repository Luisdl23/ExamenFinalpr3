@page "/Ingresotablet"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Tablet</h3>

<EditForm Model="@tablet" OnValidSubmit="@Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="numerodeserie">Numero de serie</label>
        <InputNumber id="numerodeserie" @bind-Value="tablet.numerodeserie" class="form-control" />
        <ValidationMessage For="() => tablet.numerodeserie" />
    </div>
    <div class="form-group">
        <label for="marca">Marca</label>
        <InputText id="marca" @bind-Value="tablet.marca" class="form-control" />
        <ValidationMessage For="() => tablet.marca" />
    </div>
    <div class="form-group">
        <label for="modelo">Modelo </label>
        <InputText id="modelo" @bind-Value="tablet.modelo" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Tamaniopantalla">Tamanio de la pantalla</label>
        <InputNumber id="Tamaniopantalla" @bind-Value="tablet.Tamaniopantalla" class="form-control" />
    </div>
    <div class="form-group">
        <label for="SoporteparaStylus">Soporte para Stylus</label>
        <InputText id="SoporteparaStylus" @bind-Value="tablet.SoporteparaStylus" class="form-control" />
    </div>
    <p role="status">Datos ingresados: @contador</p>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
   

</EditForm>

@if (tablet1 != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Numero de serie</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Tamanio de panatalla </th>
                <th>Soporte para Stylus</th>
                <th>Editar</th>
                <th>Borrar</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var tablet in tablet1)
            {
                <tr>
                    <td>@tablet.numerodeserie</td>
                    <td>@tablet.marca</td>
                    <td>@tablet.modelo</td>
                    <td>@tablet.Tamaniopantalla</td>
                    <td>@tablet.SoporteparaStylus</td>
                    <td>
                        <button class="btn btn-warning"
                                @onclick="@(() => NavigationManager.NavigateTo($"/Tablet-editar/{tablet.SoporteparaStylus}"))">
                            Editar
                        </button>
                    </td>
                    <td><button class="btn btn-danger" @onclick="@(() => Borrar(tablet.SoporteparaStylus))">Eliminar</button></td>
                </tr>
            }
        </tbody>
    </table>
}



@code 
{


    private Tablet tablet = new Tablet();
    List<Tablet> tablet1 = new List<Tablet>();
    private int contador = 0;
   

    protected async Task Guardar()
    {

        tablet1.Add(tablet);
        tablet = new Tablet();
        await localStorage.SetItemAsync("tablet1", tablet1);
        contador = tablet1.Count;


    }



    protected async Task Borrar(string SoporteparaStylus)
    {
        Tablet Borrartablet = tablet1.Find(c => c.SoporteparaStylus == SoporteparaStylus);
        tablet1.Remove(Borrartablet);
        await localStorage.SetItemAsync("tablet1", tablet1);
    }

    protected override async Task OnInitializedAsync()
    {   //La primera vez que se corre poner en comentarios, pues como no existen datos
        //tablet1 = await localStorage.GetItemAsync<List<Tablet>>("tablet");

        contador = tablet1.Count;
    }

}

